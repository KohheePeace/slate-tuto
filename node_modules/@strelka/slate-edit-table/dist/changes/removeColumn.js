'use strict';

var TablePosition = require('../utils/TablePosition');

/**
 * Delete current column in a table
 *
 * @param {Object} opts
 * @param {Slate.Transform} change
 * @param {Number} at
 * @return {Slate.Transform}
 */
function removeColumn(opts, change, at) {
  var value = change.value;
  var startBlock = value.startBlock;


  var pos = TablePosition.create(change, startBlock, opts);
  var table = pos.table;


  if (typeof at === 'undefined') {
    at = pos.getColumnIndex();
  }

  var rows = table.nodes;

  // Remove the cell from every row
  if (pos.getWidth() > 1) {
    rows.forEach(function (row) {
      var cell = row.nodes.get(at);
      change.collapseToStartOfNextBlock().removeNodeByKey(cell.key, { normalize: false });
    });
    // If last column, clear text in cells instead
  } else {
    rows.forEach(function (row) {
      row.nodes.forEach(function (cell) {
        cell.nodes.forEach(function (node) {
          // We clear the texts in the cells
          change.collapseToStartOfNextBlock().removeNodeByKey(node.key);
        });
      });
    });
  }

  // Replace the table
  return change;
}

module.exports = removeColumn;