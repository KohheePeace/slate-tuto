'use strict';

var TablePosition = require('../utils/TablePosition');
var createCell = require('../utils/createCell');
var moveSelection = require('./moveSelection');

/**
 * Insert a new column in current table
 *
 * @param {Object} opts
 * @param {Slate.Transform} change
 * @param {Number} at
 * @return {Slate.Transform}
 */
function insertColumn(opts, change, at) {
  var value = change.value;
  var startBlock = value.startBlock;


  var pos = TablePosition.create(change, startBlock, opts);
  var table = pos.table;


  if (typeof at === 'undefined') {
    at = pos.getColumnIndex() + 1;
  }

  // Insert the new cell
  table.nodes.forEach(function (row) {
    var newCell = createCell(opts);
    change.insertNodeByKey(row.key, at, newCell, { normalize: false });
  });

  // Update the selection (not doing can break the undo)
  return moveSelection(opts, change, pos.getColumnIndex() + 1, pos.getRowIndex());
}

module.exports = insertColumn;